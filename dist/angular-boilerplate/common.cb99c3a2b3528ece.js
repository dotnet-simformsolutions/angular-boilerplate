"use strict";(self.webpackChunkangular_boilerplate=self.webpackChunkangular_boilerplate||[]).push([[76],{8010:(g,o,a)=>{a.d(o,{u:()=>m});var l=a(4412),d=a(4438);let m=(()=>{class u{constructor(){this.users=[],this.currentUserSubject=new l.t(null),this.currentUser$=this.currentUserSubject.asObservable(),this.users=[{id:"1",email:"test@example.com",password:"password123",firstName:"John",lastName:"Doe",mobile:"+1234567890",createdAt:new Date("2024-01-01")},{id:"2",email:"demo@test.com",password:"demo123",firstName:"Jane",lastName:"Smith",mobile:"+0987654321",createdAt:new Date("2024-01-02")}]}register(r,s,t,e,i){return new Promise(n=>{if(this.users.find(f=>f.email.toLowerCase()===r.toLowerCase()))return void n({success:!1,message:"User with this email already exists"});const c={id:Date.now().toString(),email:r,password:s,firstName:t,lastName:e,mobile:i,createdAt:new Date};this.users.push(c),console.log("User registered:",c),console.log("All users:",this.users),n({success:!0,message:"Registration successful!"})})}login(r,s){return new Promise(t=>{const e=this.users.find(i=>i.email.toLowerCase()===r.toLowerCase());e?e.password===s?(this.currentUserSubject.next(e),console.log("Login successful:",e),t({success:!0,message:"Login successful!"})):t({success:!1,message:"Invalid password"}):t({success:!1,message:"User not found. Please register first."})})}updateUser(r,s){return new Promise(t=>{const e=this.users.findIndex(i=>i.id===r);-1!==e?s.email&&s.email!==this.users[e].email&&this.users.find(n=>n.email.toLowerCase()===s.email.toLowerCase()&&n.id!==r)?t({success:!1,message:"Email already exists"}):(this.users[e]={...this.users[e],...s},console.log("User updated:",this.users[e]),t({success:!0,message:"User updated successfully!"})):t({success:!1,message:"User not found"})})}deleteUser(r){return new Promise(s=>{const t=this.users.findIndex(i=>i.id===r);if(-1===t)return void s({success:!1,message:"User not found"});const e=this.users.splice(t,1)[0];console.log("User deleted:",e),s({success:!0,message:"User deleted successfully!"})})}logout(){this.currentUserSubject.next(null)}getCurrentUser(){return this.currentUserSubject.value}isLoggedIn(){return null!==this.currentUserSubject.value}getAllUsers(){return[...this.users]}static{this.\u0275fac=function(s){return new(s||u)}}static{this.\u0275prov=d.jDH({token:u,factory:u.\u0275fac,providedIn:"root"})}}return u})()}}]);